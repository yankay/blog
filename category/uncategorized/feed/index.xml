<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>未分类 &#8211; 我自然</title>
	<atom:link href="./index.html" rel="self" type="application/rss+xml" />
	<link>./../../../index.html</link>
	<description>颜开的博客</description>
	<lastBuildDate>Sat, 23 Oct 2010 14:53:30 +0000</lastBuildDate>
	<language>zh-CN</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.4.2</generator>

<image>
	<url>./../../../wp-content/uploads/2021/03/cropped-favicon-32x32.png</url>
	<title>未分类 &#8211; 我自然</title>
	<link>./../../../index.html</link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>《1988：我想和这个世界谈谈》中丁丁哥哥的死因</title>
		<link>./../../../%e3%80%8a1988%ef%bc%9a%e6%88%91%e6%83%b3%e5%92%8c%e8%bf%99%e4%b8%aa%e4%b8%96%e7%95%8c%e8%b0%88%e8%b0%88%e3%80%8b%e4%b8%ad%e4%b8%81%e4%b8%81%e5%93%a5%e5%93%a5%e7%9a%84%e6%ad%bb%e5%9b%a0/index.html</link>
					<comments>./../../../%e3%80%8a1988%ef%bc%9a%e6%88%91%e6%83%b3%e5%92%8c%e8%bf%99%e4%b8%aa%e4%b8%96%e7%95%8c%e8%b0%88%e8%b0%88%e3%80%8b%e4%b8%ad%e4%b8%81%e4%b8%81%e5%93%a5%e5%93%a5%e7%9a%84%e6%ad%bb%e5%9b%a0/index.html#respond</comments>
		
		<dc:creator><![CDATA[yankay]]></dc:creator>
		<pubDate>Sat, 23 Oct 2010 14:53:30 +0000</pubDate>
				<category><![CDATA[未分类]]></category>
		<guid isPermaLink="false">http://www.yankay.com/?p=26097</guid>

					<description><![CDATA[<p>在韩寒的小说《1988：我想和这个世界谈谈》，丁丁哥哥永远是放在光的，就像韩寒一样放着光。该标题也取自于丁丁哥哥的一段话。丁丁哥哥死于一次远行，原因作者却没有交代，其实他已经说的很明白了。</p>
<p><a rel="nofollow" href="./../../../%e3%80%8a1988%ef%bc%9a%e6%88%91%e6%83%b3%e5%92%8c%e8%bf%99%e4%b8%aa%e4%b8%96%e7%95%8c%e8%b0%88%e8%b0%88%e3%80%8b%e4%b8%ad%e4%b8%81%e4%b8%81%e5%93%a5%e5%93%a5%e7%9a%84%e6%ad%bb%e5%9b%a0/index.html">《1988：我想和这个世界谈谈》中丁丁哥哥的死因</a>最先出现在<a rel="nofollow" href="./../../../index.html">我自然</a>。</p>
]]></description>
										<content:encoded><![CDATA[<p>在韩寒的小说《1988：我想和这个世界谈谈》，丁丁哥哥永远是放在光的，就像韩寒一样放着光。该标题也取自于丁丁哥哥的一段话。丁丁哥哥死于一次远行，原因作者却没有交代，其实他已经说的很明白了。</p>
<p><a href="http://book.douban.com/subject/5275059/"><img decoding="async" src="http://img3.douban.com/lpic/s4477716.jpg" style="border:0"/></a></p>
<h3>片段一</h3>
<pre style="width:95%">
丁丁哥哥的身材很好，他和那些书呆子们不同，他喜欢体育，很早赤膊。在五月里，他就开始光着上身，对着篮球架引体向上。他可以做三十下，我可以做三下。他教我如何双手握着篮球架上的横杠在上面转一圈，我一个夏天都喜欢供着篮球架打转，我衣服的腹部都是锈水。丁丁哥哥有一次甚至把篮球架都拔了起来，换了一个地方，因为他说篮球架在的地方
不好，他在学习的时候每天都要看到，让他分心。
我相信，丁丁哥哥那天是去找了临时工哥哥，并且把他痛打一顿。但是丁丁哥哥后来告诉我，他只是去谈了谈，他说打架当然能解决问题，谈也能解决问题。我说，那你为什么不像香港电影里那样，直接就打架呢？
丁丁哥哥沉思许久，意味深长地看着我，把手放在我的肩膀上，说，因为会疼嘛。
我点了点头。
丁丁哥哥说，他在学校里是学生会的主席，有的事情，靠谈就搞定了，他有领导能力。丁丁哥哥说，那天，我去找了临时工哥哥，问他缘由，因为像我们这种大人，是不会打弹子的。
我看着丁丁哥哥，丁丁哥哥一点头，继续说，果然。
我一精神，问，那是为什么呢，他要和我们打弹子。
丁丁哥哥说，因为他要赢你们的弹子，他不光和你们打，他还和别的小孩子打，因为他要买一只红灯牌录音机。
我说，嗯。
丁丁哥哥秀了一下肱二头肌，说道，我说，你这是不可以的，你这是欺负小孩子。你要录音机干什么？他说，他要录一盘磁带，唱一首歌寄给他的笔友。
我说，他可以去借一台录啊。
丁丁哥哥说，总是有私心的嘛，他当然也想自己听听，后来我就带他去了文化站，借了我一个朋友的录音机。
我说，哇，文化站的人你也认识啊。
丁丁哥哥云淡风轻道，一个朋友。
我说，那临时工哥哥唱了一首什么歌啊。
丁丁哥哥说，他录了一首《尘缘》。
我说，什么是《尘缘》啊？
丁丁哥哥说，你爸妈不看电视啊，主题歌。
我说，嗯。
丁丁哥哥哼道，尘缘如梦，几番起伏总不平，繁华落尽，一身憔悴在风里，回头时无晴也无雨，漫漫长路，起伏不能由我，人海漂泊，尝尽人情淡薄，热情热心，换冷淡冷漠，任多少真情独向寂寞，人随风过，自在花开花又落，不管世间沧桑如何
我打断了丁丁哥哥，笑道，哈哈哈哈哈哈，临时工哥哥也会唱歌，临时工哥哥也会唱歌。
我没有意识到，那一刻是丁丁哥哥在唱歌，这是我第一次听他唱歌，但是我却打断了他，
丁丁哥哥看着我说，漫漫长路，起伏不能由我。
我跟着唱道，漫漫长路，起伏不能由我。
丁丁哥哥说，这是去年的歌，今年唱着还挺有感觉。
我跟着说，挺有感觉！
丁丁哥哥答应在那个夏天教我足球中的假动作，丁丁哥哥说我踢球太老实了，往左就是往左，往右就是往右，你的身体已经告诉了对手一切。你要把球踢好，要把球控制在自己的脚下，就要学会假动作，你眼睛看着右边，身体晃向右边，你伸出右脚，大家都以为你要往右去了，突然之间，你的左脚一发力，你其实是向左去了，你就把大家都骗了，踢球过人一定要做假动作。等我回来我就教你假动作。
丁丁哥哥在春天收拾好所有的行囊，握着一张火车票向我告别。
我说，丁丁哥哥，你要去南方还是要去北方啊。
丁丁哥哥说，我要去北方。
我说，哇，带我一起去吧。
丁丁哥哥说，不行，你太小了。
我说，我坐火车不用钱的。
丁丁哥哥说，不行，你太大了。
我说，丁丁哥哥，你去做什么啊？
丁丁哥哥说，我去和他们谈谈。
我说，你和谁谈谈啊？
丁丁哥哥唇边露出微笑，急切地说，这个世界。
我说，哇噢。
如果丁丁哥哥还活着，现在应该是 38 岁？39 岁？40 岁？我已经迷糊了。娜娜买了两大塑料袋的食物向我走来。没走几步，就扶着垃圾桶吐了起来。我赶紧打开车门，门边正好撞到一个推着液化气罐的老大爷。我没顾上，径直穿过马路。老大爷大喝一声，小伙子，你站住，撞了人想跑？
</pre>
<p>从这段话韩寒对丁丁哥哥有比较全面的介绍。丁丁哥哥身体很健壮，并且非常爱好学习，是学生会的主席。他还说“打架当然能解决问题，谈也能解决问题”，同时表示更期望和平解决问题。唱出那首《尘缘》，颇有诀别的意味。在春天出发去北方，答应会在夏天来教“我”踢球，可以却没有能回来。去北方的目的是“和这个世界谈谈”。如果大学四年的话，他上大学的年代大约在1987-1993之间。</p>
<h3>片段二</h3>
<pre style="width:95%">
10 号的性格从小这样，在他小的时候，周围有不少人讨厌他，但这就是我没有讨厌他的原因， 我觉得他就是一个粗制滥造没有文化的丁丁哥哥，他们是事物的两个方向，但却是同一样事物。10 号那样滥，但有时候能泛出亮光。丁丁哥哥虽然总是充满光
芒，但他也有背对着我们的光斑。
在这个夏天湿漉漉的夜晚，10 号直接抽出一把枪，说，兄弟，你玩玩。
我忙摆手，问他，真的假的。
10 号说，当然是真家伙，假的带在身上，那还不被兄弟们笑死。
我说，你哪里来的。
10 号说，你不知道吧，小时候小学的校办厂，它原来就是生产枪的。我他妈也是到后来才知道，你看，我要了这个型号，陆四式，—枪—个。
我看了一眼，说，你开过么？
10 号举起枪，朝天砰的一枪，回声在这个小镇上飘荡撞击了三四次，我抬头望去，刺眼的月光和若隐若现的树叶摇曳着。10 号乐不可支，看着我，说，开过了。
10 号搂着我的肩膀，我们坐在一个公共汽车站前，10 号说，娘的，这个娘们。我最近撩上了一个女的。哦，我先跟你说，前两天我还看到了一个片子．一个电影，讲少年杀人事件的，但是我被骗了，这根本就不是一个枪战片，这片子太臭了，太闷了，但我每次都想，我要是不看了， 我就对不起我刚才浪费的时间，我就看完了， 结果还是个闷屁，三个多小时。
但是我里面学会了一句话，一句台词，也是一个娘们说的，我就把这个台词发给了我撩的那个女的，我发短信告诉她，我就像这个世界，这个世界是不会变的，来适应这个世界吧，哈哈哈哈哈。
我说，嗯，还挺文艺的，撩那些爱唱歌写东西的女的还行。
</pre>
<p>10号就是丁丁哥哥的一个劣质仿制品。相比于丁丁哥哥选择和这个世界谈谈，10号选择适应这个世界。于是他手里有一把“陆四式”手枪。</p>
<p>“陆四式”手枪比较老了，性能不好，10号没有理由特地选这个型号。<br />
丁丁哥哥死于何事，想必不用再赘述了。</p>
<p>“我辈执笔文人，每觉我民族文化只是一大酱缸，肮脏污染之外，一无可取，果尔，则吾人对上述千千万万之烈士圣贤，又何以交代？正因为我民族中也多的是黄兴一类的贤人烈士，才能抵制那些民族败类、文化渣滓、昏君独夫、党棍官僚、土豪劣绅和市侩文痞，而使我民族文化绵延五千年而未至于绝代也。言念及此，每于午夜清晨，试溯旧史，辄至感慨万端，有时且垂涕停笔，不能自已。历史学家也是人嘛！虽尽量压抑人皆有之的情感，仍难期其入至善之境也。”<br />
&#8211;唐德刚</p>
<p>读这部小说的时候，我感到一股莫名的压抑感，压抑的连悲伤都没有了。也许我想成为丁丁哥哥，做不成，最后在世界的压迫下，堕入了酱缸，哈哈哈哈哈。<br />
[audio:http://yankay-static.googlecode.com/svn/trunk/music/Hitomi%20-%20Stories.mp3]</p>
<p><a rel="nofollow" href="./../../../%e3%80%8a1988%ef%bc%9a%e6%88%91%e6%83%b3%e5%92%8c%e8%bf%99%e4%b8%aa%e4%b8%96%e7%95%8c%e8%b0%88%e8%b0%88%e3%80%8b%e4%b8%ad%e4%b8%81%e4%b8%81%e5%93%a5%e5%93%a5%e7%9a%84%e6%ad%bb%e5%9b%a0/index.html">《1988：我想和这个世界谈谈》中丁丁哥哥的死因</a>最先出现在<a rel="nofollow" href="./../../../index.html">我自然</a>。</p>
]]></content:encoded>
					
					<wfw:commentRss>./../../../%e3%80%8a1988%ef%bc%9a%e6%88%91%e6%83%b3%e5%92%8c%e8%bf%99%e4%b8%aa%e4%b8%96%e7%95%8c%e8%b0%88%e8%b0%88%e3%80%8b%e4%b8%ad%e4%b8%81%e4%b8%81%e5%93%a5%e5%93%a5%e7%9a%84%e6%ad%bb%e5%9b%a0/feed/index.html</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		<enclosure url="http://yankay-static.googlecode.com/svn/trunk/music/Hitomi%20-%20Stories.mp3" length="0" type="audio/mpeg" />

			</item>
		<item>
		<title>用Map/Reduce来做好友推荐</title>
		<link>./../../../%e7%94%a8mapreduce%e6%9d%a5%e5%81%9a%e5%a5%bd%e5%8f%8b%e6%8e%a8%e8%8d%90/index.html</link>
					<comments>./../../../%e7%94%a8mapreduce%e6%9d%a5%e5%81%9a%e5%a5%bd%e5%8f%8b%e6%8e%a8%e8%8d%90/index.html#respond</comments>
		
		<dc:creator><![CDATA[yankay]]></dc:creator>
		<pubDate>Thu, 12 Aug 2010 15:04:03 +0000</pubDate>
				<category><![CDATA[未分类]]></category>
		<guid isPermaLink="false">http://www.yankay.com/?p=26073</guid>

					<description><![CDATA[<p>SNS网站都有一个功能，就是好友推荐(或者Follower推荐)。例如，在人人网上出现的“你可能认识的人”。怎么来实现呢，有一个很简单的办法。如果小刚和小明不是好友，但是他们有很多的共同好友。那么可以认为，A和B很可能相识。</p>
<p><a rel="nofollow" href="./../../../%e7%94%a8mapreduce%e6%9d%a5%e5%81%9a%e5%a5%bd%e5%8f%8b%e6%8e%a8%e8%8d%90/index.html">用Map/Reduce来做好友推荐</a>最先出现在<a rel="nofollow" href="./../../../index.html">我自然</a>。</p>
]]></description>
										<content:encoded><![CDATA[<p>SNS网站都有一个功能，就是好友推荐(或者Follower推荐)。例如，在人人网上出现的“你可能认识的人”。怎么来实现呢，有一个很简单的办法。如果小刚和小明不是好友，但是他们有很多的共同好友。那么可以认为，A和B很可能相识。</p>
<p>从图论的讲法上看，就是先列出一个人(记为小A)的所有朋友的朋友，在寻找小A和这些人之间有多少长度为2的通路。将这些通路数排序，寻找最高的那几个就可以了。</p>
<p>所以我们的Map/Reduce的任务就是：找出所有人的十个Top“推荐好友”。</p>
<p>社会化网络的图一般都很简单。我们假设输入是按name排序的。</p>
<pre lang="php">
"ricky" => ["jay", "peter", "phyllis"]
"peter" => ["dave", "jack", "ricky", "susan"]
</pre>
<p>我们使用两轮Map/Reduce任务来完成这个操作。</p>
<p><strong>第一轮MR任务</strong></p>
<p>这个任务的目的是计算每一对距离是2的人之间的通路数。</p>
<ul>
<li>在Map函数中，我们先将每对朋友做一个笛卡尔乘积，说的不大清楚，举个例子，比如
<pre lang="php">
"ricky" => ["jay", "john", "mitch"]
</pre>
<p>那么结果就是</p>
<pre lang="php">
 ["jay", "john"], ["jay", "mitch"], ["john", "mitch"]
</pre>
<p>他们都是通过ricky牵线搭桥认识的。将已经是朋友的组合筛选掉，再排好序。传给Reducer。
</li>
<li>在Reduce函数中, 相同的组合必定会传给Reducer。所以Reducer只要数好有几个相同的组合传给他就行了.</li>
</ul>
<pre lang="php">Input record ...  person -> connection_list
e.g. "ricky" => ["jay", "john", "mitch", "peter"]
also the connection list is sorted by alphabetical order

def map(person, connection_list)
  # Compute a cartesian product using nested loops
  for each friend1 in connection_list
     # Eliminate all 2-degree pairs if they already
     # have a one-degree connection
     emit([person, friend1, 0])
     for each friend2 > friend1 in connection_list
         emit([friend1, friend2, 1],  1)

def partition(key)
  #use the first two elements of the key to choose a reducer
  return super.partition([key[0], key[1]])

def reduce(person_pair, frequency_list)
  # Check if this is a new pair
  if @current_pair != [person_pair[0], person_pair[1]]
      @current_pair = [person_pair[0], person_pair[1]]
      # Skip all subsequent pairs if these two person
      # already know each other
      @skip = true if person_pair[2] == 0

  if !skip
      path_count = 0
      for each count in frequency_list
          path_count += count
      emit(person_pair, path_count)

Output record ... person_pair => path_count
e.g. ["jay", "john"] => 5

</pre>
<p><strong>第二轮MR任务</strong></p>
<p>这一轮的MR任务是为了列出每个人距离为2的好友，查出他们直接究竟有几条路径。</p>
<ul>
<li>在Map函数中，我们将每一组数据重新排列，保证一个人信息落在一个reducer上</li>
<li>在Reduce函数中，只要将每个人的可能好友之间的路径数排个序就可以了.</li>
</ul>
<pre lang="php">Input record = Output record of round 1

def map(person_pair, path_count)
  emit([person_pair[0], path_count], person_pair[1])

def partition(key)
  #use the first element of the key to choose a reducer
  return super.partition(key[0])

def reduce(connection_count_pair, candidate_list)
  # Check if this is a new person
  if @current_person != connection_count_pair[0]
      emit(@current_person, @top_ten)
      @top_ten = []
      @current_person = connection_count_pair[0]

  #Pick the top ten candidates to connect with
  if @top_ten.size < 10
      for each candidate in candidate_list
          @top_ten.append([candidate, connection_count_pair[1]])
          break if @pick_count > 10

Output record ... person -> candidate_count_list

e.g.  "ricky" => [["jay", 5],  ["peter", 3] ...]</pre>
<p><strong>Follower推荐</strong><br />
如果我想要做Follower推荐而不是好友推荐怎么办呢？<br />
很简单。只要将第一步的MR任务改为求“Follow关系”和“Followed”关系的笛卡尔乘积就可以了。这里就不列伪码了。</p>
<p>参考地址：<a href="http://horicky.blogspot.com/">http://horicky.blogspot.com/</a></p>
<p><a rel="nofollow" href="./../../../%e7%94%a8mapreduce%e6%9d%a5%e5%81%9a%e5%a5%bd%e5%8f%8b%e6%8e%a8%e8%8d%90/index.html">用Map/Reduce来做好友推荐</a>最先出现在<a rel="nofollow" href="./../../../index.html">我自然</a>。</p>
]]></content:encoded>
					
					<wfw:commentRss>./../../../%e7%94%a8mapreduce%e6%9d%a5%e5%81%9a%e5%a5%bd%e5%8f%8b%e6%8e%a8%e8%8d%90/feed/index.html</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Eclipse4.0的新特性(可下载)</title>
		<link>./../../../eclipse4-0%e7%9a%84%e6%96%b0%e7%89%b9%e6%80%a7/index.html</link>
					<comments>./../../../eclipse4-0%e7%9a%84%e6%96%b0%e7%89%b9%e6%80%a7/index.html#respond</comments>
		
		<dc:creator><![CDATA[yankay]]></dc:creator>
		<pubDate>Sat, 31 Jul 2010 00:41:34 +0000</pubDate>
				<category><![CDATA[未分类]]></category>
		<guid isPermaLink="false">http://www.yankay.com/?p=26040</guid>

					<description><![CDATA[<p>千呼万唤始出来，Eclipse4.0提前版发布了。我等这个版本已经一年多了。新的版本的性能很好，真的很好。但是 [&#8230;]</p>
<p><a rel="nofollow" href="./../../../eclipse4-0%e7%9a%84%e6%96%b0%e7%89%b9%e6%80%a7/index.html">Eclipse4.0的新特性(可下载)</a>最先出现在<a rel="nofollow" href="./../../../index.html">我自然</a>。</p>
]]></description>
										<content:encoded><![CDATA[<p>千呼万唤始出来，Eclipse4.0提前版发布了。我等这个版本已经一年多了。新的版本的性能很好，真的很好。但是没有我所期待的Web运行模式。界面也不如原先优雅了。</p>
<p>感觉Eclipse4.0对于Eclipse3.6。在功能上相当于Eclipse3.6对于Eclipse3.5，在Eclipse个上变化并不大。毕竟Eclipse的功能主要靠插件提供，而Eclipse只是给这些功能提供一个展现的舞台。</p>
<p>对 于Eclipse平台本身，将Web技术引入到Eclipse平台内部。Eclipse开发者可以使用Css,Javascript等Web技术来开发插 件。新的RCP可以是一个富客户端开发工具，可以将应用程序编译成Flex,Dojo(js),以及本地版本运行。不过RCP在eclipse3.5已经出现了。</p>
<p>接下来介绍一些Eclipse4.0的新特性。</p>
<p>Eclipse4.0项目主页  <a href="http://www.eclipse.org/eclipse4/">http://www.eclipse.org/eclipse4/</a></p>
<h4>新版工作台</h4>
<div dir="ltr">
<p>新版的Eeclipse更新了用户界面。此更新的主要目标是采取一个更现代的视觉风格，减少混乱，并使用空白空间代替原先的分割线来区分不同的界面元素。重新设计了选项卡和工作台，让我们能更专注于工作区域。</p>
</div>
<p><a href="http://download.eclipse.org/e4/sdk/drops/R-4.0-201007271520/images/newlook.png"><img decoding="async" class="alignnone size-medium wp-image-26043" title="newlook" src="http://download.eclipse.org/e4/sdk/drops/R-4.0-201007271520/images/newlook.png" alt="" width="100%" /></a></p>
<h4>全局搜索框</h4>
<div dir="ltr">
<p>和Gmail相似，工具栏上有了全局搜索框。提供了一个“快速通道”。这个功能很亮。</p>
</div>
<p><a href="http://download.eclipse.org/e4/sdk/drops/R-4.0-201007271520/images/searchbar.png"><img decoding="async" class="alignnone size-medium wp-image-26043" title="newlook" src="http://download.eclipse.org/e4/sdk/drops/R-4.0-201007271520/images/searchbar.png" alt="" width="100%" /></a></p>
<h4>更灵活的布局</h4>
<p>您现在可以将功能面板和编辑器叠在一起了。例如，在一些情况下，您可以将功能面板和编辑器叠在一起，以提供更多的空间。</p>
<p><a href="http://download.eclipse.org/e4/sdk/drops/R-4.0-201007271520/images/mixvieweditor.png"><img decoding="async" class="alignnone size-medium wp-image-26043" title="newlook" src="http://download.eclipse.org/e4/sdk/drops/R-4.0-201007271520/images/mixvieweditor.png" alt="" width="100%" /></a></p>
<p>您不仅可以混合操作面板和编辑器，你还可以在编辑器区域分割一块给操作面板，然后最大化编辑器区域。整个工作空间都显示编辑器。</p>
<p><a href="http://download.eclipse.org/e4/sdk/drops/R-4.0-201007271520/images/splitvieweditor.png"><img decoding="async" class="alignnone size-medium wp-image-26043" title="newlook" src="http://download.eclipse.org/e4/sdk/drops/R-4.0-201007271520/images/splitvieweditor.png" alt="" width="100%" /></a></p>
<h4>Eclipse开发者相关的功能</h4>
<ul>
<li>通用事件总线</li>
<li>用户界面模块化</li>
<li>简洁的模型结构</li>
<li>使用CSS来控制样式</li>
<li><a href="http://download.eclipse.org/e4/sdk/drops/R-4.0-201007271520/eclipse-news.html">更多</a></li>
</ul>
<p>虽然这些内容对于使用Eclipse的人用处不大，但是对于平台本身影响还是很大的。</p>
<p><a rel="nofollow" href="./../../../eclipse4-0%e7%9a%84%e6%96%b0%e7%89%b9%e6%80%a7/index.html">Eclipse4.0的新特性(可下载)</a>最先出现在<a rel="nofollow" href="./../../../index.html">我自然</a>。</p>
]]></content:encoded>
					
					<wfw:commentRss>./../../../eclipse4-0%e7%9a%84%e6%96%b0%e7%89%b9%e6%80%a7/feed/index.html</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Facebook背后的软件</title>
		<link>./../../../facebook%e8%83%8c%e5%90%8e%e7%9a%84%e8%bd%af%e4%bb%b6/index.html</link>
					<comments>./../../../facebook%e8%83%8c%e5%90%8e%e7%9a%84%e8%bd%af%e4%bb%b6/index.html#respond</comments>
		
		<dc:creator><![CDATA[yankay]]></dc:creator>
		<pubDate>Wed, 14 Jul 2010 09:18:20 +0000</pubDate>
				<category><![CDATA[未分类]]></category>
		<guid isPermaLink="false">http://www.yankay.com/?p=26022</guid>

					<description><![CDATA[<p>Facebook的数据规模使得很多传统的解决方案根本不适用，或者无法分解来处理。保持一个拥有5亿用户的系统一直 [&#8230;]</p>
<p><a rel="nofollow" href="./../../../facebook%e8%83%8c%e5%90%8e%e7%9a%84%e8%bd%af%e4%bb%b6/index.html">Facebook背后的软件</a>最先出现在<a rel="nofollow" href="./../../../index.html">我自然</a>。</p>
]]></description>
										<content:encoded><![CDATA[<p><img decoding="async" class="alignright" title="Facebook" src="http://farm3.static.flickr.com/2425/3925637482_a477255f29_o.png" alt="Facebook" width="150" height="43" /></p>
<p><a href="http://facebook.com/">Facebook</a>的数据规模使得很多传统的解决方案根本不适用，或者无法分解来处理。保持一个拥有5亿用户的系统一直稳定可靠的运行，并不是一件很容易的事情。这篇文章介绍了一下Facebook使用的软件。</p>
<h3>Facebook的扩展性挑战</h3>
<p>在我们讨论细节之前，这里有一些Facebook已经做的软件规模：</p>
<ul>
<li>Facebook有<strong>570000000000每月页面浏览量</strong> （据Google Ad Planner）。</li>
<li>Facebook的照片量比其他所有图片网站加起来还多（包括Flickr等网站）。</li>
<li>每个月超过<strong>30亿张照片</strong>被上传。</li>
<li>Facebook的系统服务每秒处理<strong>120万张照片</strong> 。 这不包括CDN服务中处理的照片。</li>
<li>每月超过<strong>25亿条的内容</strong> （状态更新，评论等）被共享。</li>
<li>Facebook有超过<strong>30,000服务器</strong> （这个数字是去年一年！）</li>
</ul>
<h3>Facebook扩展所依赖的软件</h3>
<p>Facebook是在某些程度上说仍然是LAMP的站点，但它比普通的LAMP大得多，以纳入其他元素和很多服务，并修改现行的做法。</p>
<p>例如：</p>
<ul>
<li>Facebook的仍使用PHP，但它已经为它建立一个编译器，以便它可以分为本地代码打开了Web服务器，从而提高性能。</li>
<li>Facebook的使用Linux，但他特别为网络吞吐量做了优化。</li>
<li>Facebook的使用MySQL，但主要是作为一个Key-value的持久性存储，Jions和服务器逻辑操作在Web服务器上操作。因为在那里更容易执行。</li>
</ul>
<p>还有是自编写的系统，如Haystack，一个高度可扩展的对象存储，用来存储Facebook的照片。还有Scribe，一个日志系统，可以运行在Facebook的巨大规模上的日志系统。</p>
<p>OK。现在 我们介绍一下全球最大的社会网络网站的所使用的软件吧。</p>
<p><strong>Memcached</strong></p>
<p><strong><br />
</strong></p>
<p><img decoding="async" class="alignright" title="Memcached" src="http://farm2.static.flickr.com/1278/4712028564_d0fca6a74f_o.png" alt="Memcached" width="91" height="85" /></p>
<p><a href="http://translate.googleusercontent.com/translate_c?hl=en&amp;ie=UTF-8&amp;sl=en&amp;tl=zh-CN&amp;u=http://memcached.org/&amp;prev=_t&amp;rurl=translate.google.com&amp;twu=1&amp;usg=ALkJrhjoR4aiCM3vk8ZlmOZ-vLMVbFMYQA">memcached的</a>是现在互联网最有名的软件之一了。 这是一个分布式内存缓存系统，用来作为Web服务器和MySQL服务器之间的缓存层（因为数据库访问比较慢）。 多年以来，Facebook已经提出了一些优化Memcached和一些周边软件的办法。如压缩network stack。</p>
<p>Facebook的每时每刻都有数10TB的数据缓存在Memcached的数千台服务器上。 它可能是世界上最大的Memcached的集群了。</p>
<h4>HipHop for PHP</h4>
<p><img decoding="async" class="alignright" title="HipHop for PHP" src="http://farm5.static.flickr.com/4061/4712028602_a3b5e22cfd_o.png" alt="HipHop for PHP" width="86" height="113" /></p>
<p>PHP作为一种脚本语言，和本地程序相比是运行缓慢的。 <a href="http://wiki.github.com/facebook/hiphop-php/">HipHop</a>可以将PHP转换成C + +代码，然后再进行编译，可以获得更好的性能。 因为Facebook严重依赖PHP，这使得其可以让Web服务器运行的更有效率。</p>
<p>一个工程师小团队在Facebook（一开始只有三人）花了18个月时间开发HipHop，现在已经是可用状态。</p>
<h4>Haystack</h4>
<p><a href="http://www.facebook.com/note.php?note_id=76191543919">Haystack</a>是Facebook的高性能照片存储/检索系统（严格来说，是一个对象存储，因此它并不一定要存储照片）。 它有许多工作要做;有超过200亿张上传的照片，并且每一个被保存在四个不同的分辨率，因此有超过800亿张照片。</p>
<p>它不仅是对能够处理的上亿的照片，运行表现也是至关重要的。 正如我们前面提到的，Facebook的服务约120万张照片<em>每秒</em> ，这个数字不包括CDN上的。 这是一个惊人的数字。</p>
<h4>BigPipe</h4>
<p><a href="http://translate.googleusercontent.com/translate_c?hl=en&amp;ie=UTF-8&amp;sl=en&amp;tl=zh-CN&amp;u=http://www.facebook.com/notes/facebook-engineering/bigpipe-pipelining-web-pages-for-high-performance/389414033919&amp;prev=_t&amp;rurl=translate.google.com&amp;twu=1&amp;usg=ALkJrhiLlmGC047zZTlQiS-Dv_dA3i55qA">BigPipe</a>是Facebook开发的一个动态的网页服务系统。 Facebook使用它来按section(称为“pagelets”)处理每个网页，以获取最佳性能。</p>
<p>例如，在聊天窗口是分开的，新闻Feed也是分开的，等等。 这些pagelets可以在一个页面表现的时候同时使用，这是该页面表现的时候获取进来的。即使某些工程的一部分关闭或中端，用户也可以获得一部分网页。</p>
<h4>Cassandra</h4>
<p><img loading="lazy" decoding="async" class="alignright" title="Cassandra" src="http://farm5.static.flickr.com/4018/4712028478_88e71e7d79_o.png" alt="Cassandra" width="200" height="43" /></p>
<p><a href="http://cassandra.apache.org/">Cassandra</a>是一个不会单点失败的分布式存储系统。 这是为NoSQL运动的一个重要组成部分，并已公开的源代码（它甚至成为一个Apache项目）。Facebook在搜索功能中使用它。</p>
<p>除了Facebook，还有一些人也用它，例如Digg的。 不过<a href="http://zhaolinjnu.blog.sohu.com/156413543.html">最近Twitter放弃了cassandra</a>。</p>
<h4>Scribe</h4>
<p><a href="http://github.com/facebook/scribe">Scribe</a>是一个灵活的日志系统，Facebook在他的内部大量使用。 它的能够处理在Facebook的大规模日志记录，并自动处理新的日志记录类别,Facebook有数百个日志类别(categories)。</p>
<h4>Hadoop and Hive</h4>
<p><img loading="lazy" decoding="async" class="alignright" title="Hadoop" src="http://farm5.static.flickr.com/4067/4712028518_ed2144f29c_o.png" alt="Hadoop" width="200" height="48" /></p>
<p><a href="http://translate.googleusercontent.com/translate_c?hl=en&amp;ie=UTF-8&amp;sl=en&amp;tl=zh-CN&amp;u=http://hadoop.apache.org/&amp;prev=_t&amp;rurl=translate.google.com&amp;twu=1&amp;usg=ALkJrhg42LgK3luQAhxUO4LxcRZHCBSIoQ">Hadoop的</a>是一个开源的map-reduce实现，使得它可以在进行大数据上进行运算。 Facebook的使用这个进行数据分析（而我们都知道，Facebook已经大量的数据）。 <a href="http://hadoop.apache.org/hive/">Hive</a>就是发源于Facebook，使得对于Hadoop使用的SQL查询成为可能，从而是其更容易对非程序员使用。</p>
<p>Hadoop和Hive是开源的（Apache项目），有为数众多的追随者，例如雅虎和Twitter。</p>
<h4>Thrift</h4>
<p>Facebook使用的几种不同的语言和不同的services。 PHP是最终用于前端，Erlang是用于聊天，Java和C ++也使用于多种场所，也许还有其他语言。<a href="http://incubator.apache.org/thrift/">Thrift</a>是一个内部开发的跨语言的框架，联系语言，使他们可以在一起合作，从而使他们之间可以交互。 这使得Facebook可以更容易为继续保持其跨语言的发展。</p>
<p>Facebook已经让Thrift开源。更多的语言支持已被添加到Thrift。</p>
<h4>Varnish</h4>
<p><img loading="lazy" decoding="async" class="alignright" title="Varnish" src="http://farm5.static.flickr.com/4014/4711388777_09a9b1d9c8_o.png" alt="Varnish" width="200" height="54" /></p>
<p><a href="http://varnish-cache.org/">Varnish</a>是一个HTTP加速器，可以作为一个负载平衡器，并缓存的内容，然后可以以闪电般的速度送达。</p>
<p>Facebook使用的arnish来处理照片和个人资料图片，处理每天数十亿的要求。 和其他的东西一样，Varnish是开源的。</p>
<h3>保持Facebook 顺畅运行的其他东西。</h3>
<p>我们已经提到的软件，组成了Facebook的系统，并帮助运行在大规模上。 但是，处理这么大的系统是一个复杂的任务，因此我们将列出一些其他的东西，他们保持了Facebook的平稳运行。</p>
<h4>渐进发布和暗启动</h4>
<p>Facebook有一个他们所谓的守门人制度（Gatekeeper），允许他们可以给不同的用户运行两套不同的系统。 这让Facebook渐进的发布新的功能，A / B测试，只为Facebook雇员发布等的某些特性。</p>
<p>Gatekeeper也可以让Facebook实现“暗启动”，这是在用户使用一些功能之前，就激活某些功能（因为用户没有察觉，所以称之为暗启动）。 这将作为一个现实世界的压力测试，在正式启动前，帮助揭露一些功能障碍和其他问题。 暗启动通常是在正式启动前两个星期。</p>
<h4>Profiling的直播系统</h4>
<p>Facebook的仔细监控其系统，有趣的是它也负责监察每一个PHP函数在生产环境的性能。 检测各个PHP的环境的配置运行情况。使用开源工具，<a href="http://pecl.php.net/package/xhprof">XHProf</a> 。</p>
<p><strong>渐进的利用关闭功能来提升性能</strong></p>
<p>如果Facebook运行时出现性能问题，有一个办法，就是逐步禁用不太重要的功能，以增强Facebook的大量核心功能表现。</p>
<h4>我们没有提及的事情</h4>
<p>我们没有提到硬件相关的事情，但这也是提高可伸缩性的重要一环。例如，就像其他大型站点，Facebook利用CDN来处理静态内容。Facebook还有一个<a href="http://www.facebook.com/prinevilledatacenter">the huge data center</a>，可以帮助他扩展更多的服务。</p>
<p><strong>Facebook的开源情结</strong></p>
<p>不仅是Facebook使用（和帮助），如Linux，Memcached的，MySQL和Hadoop的开源软件，以及许多其他情况下，也贡献许多了其内部开发的软件。</p>
<p>Facebook亦开源了Tornado，一个高性能的网络服务器框架，由FriendFeed团队开发。</p>
<p>关于开放源码软件清单，可以在<a href="http://facebook.com/opensource">Facebook’s Open Source page</a>.找到。</p>
<p><em><strong>Data sources:</strong></em></p>
<p><strong><em><span style="font-style: normal; font-weight: normal;"><a href="http://royal.pingdom.com/2010/06/18/the-software-behind-facebook/">http://royal.pingdom.com/2010/06/18/the-software-behind-facebook/</a></span></em></strong></p>
<p><em><strong> </strong> <a href="http://www.infoq.com/presentations/Facebook-Moving-Fast-at-Scale">Various</a> <a href="http://www.infoq.com/presentations/Scale-at-Facebook">presentations</a> by Facebook engineers, as well as the always informative<a href="http://facebook.com/eblog">Facebook engineering blog</a>.</em></p>
<p><a rel="nofollow" href="./../../../facebook%e8%83%8c%e5%90%8e%e7%9a%84%e8%bd%af%e4%bb%b6/index.html">Facebook背后的软件</a>最先出现在<a rel="nofollow" href="./../../../index.html">我自然</a>。</p>
]]></content:encoded>
					
					<wfw:commentRss>./../../../facebook%e8%83%8c%e5%90%8e%e7%9a%84%e8%bd%af%e4%bb%b6/feed/index.html</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>来到上海了</title>
		<link>./../../../%e6%9d%a5%e5%88%b0%e4%b8%8a%e6%b5%b7%e4%ba%86/index.html</link>
					<comments>./../../../%e6%9d%a5%e5%88%b0%e4%b8%8a%e6%b5%b7%e4%ba%86/index.html#respond</comments>
		
		<dc:creator><![CDATA[yankay]]></dc:creator>
		<pubDate>Wed, 14 Jul 2010 04:47:33 +0000</pubDate>
				<category><![CDATA[未分类]]></category>
		<guid isPermaLink="false">http://www.yankay.com/?p=26013</guid>

					<description><![CDATA[<p>来到上海了。 挤上了人山人海的地铁，兴致勃勃的向浦东进发。大海的地铁确实很拥挤，要想跳钢管是不可能了。作为地铁 [&#8230;]</p>
<p><a rel="nofollow" href="./../../../%e6%9d%a5%e5%88%b0%e4%b8%8a%e6%b5%b7%e4%ba%86/index.html">来到上海了</a>最先出现在<a rel="nofollow" href="./../../../index.html">我自然</a>。</p>
]]></description>
										<content:encoded><![CDATA[<p>来到上海了。</p>
<p>挤上了人山人海的地铁，兴致勃勃的向浦东进发。大海的地铁确实很拥挤，要想跳钢管是不可能了。作为地铁的克星，果然不负众望，地铁行至一半，死机不动了，许久方徐行。</p>
<p>找了个地方安顿了下来。准备Galaxydb那个项目。去看看单位。采购生活资料，事情还是蛮多的。值得一提的是，我们下定决心，决定斥巨资购买一把菜刀的时候发现找不到能买到菜刀的地方了。于是我打听到因为世博会，上海已经停止出售和运输刀具。于是我们只有吃冷冻食物了。</p>
<p>其实我们还可以吃刀削面。</p>
<hr />
<h3>刀削面的传说</h3>
<p>据传当蒙古<a title="鞑靼" href="http://zh.wikipedia.org/zh-sg/%E9%9E%91%E9%9D%BC">鞑靼</a>侵占<a title="中原" href="http://zh.wikipedia.org/zh-sg/%E4%B8%AD%E5%8E%9F">中原</a>后，为防止<a title="汉人" href="http://zh.wikipedia.org/zh-sg/%E6%B1%89%E4%BA%BA">汉人</a>起义造反，将家家户户的<a title="金属" href="http://zh.wikipedia.org/zh-sg/%E9%87%91%E5%B1%9E">金属</a>器具全部没收，并规定每十户人家只能用一把厨刀，切菜做饭时轮流使用。</p>
<p>一天中午，有位老汉想取刀做面，结果没能接到，气馁地回家，在回家的路上看到一块薄<a title="铁" href="http://zh.wikipedia.org/zh-sg/%E9%93%81">铁</a>皮，就顺手捡起来揣在怀里。 回家后，老伴责怪老汉，老汉取出铁皮，老伴说：“你就会胡侃”，老汉灵机一动，就用这个切吧！他把揉好的面团放在一块木板上用左手端好，右手操起铁片就削了起来，薄薄的面片飞入锅中后不住地翻滚，很快就煮熟了。 老汉把<a title="面" href="http://zh.wikipedia.org/zh-sg/%E9%9D%A2">面</a>捞入碗中浇上<a title="卤汁" href="http://zh.wikipedia.org/zh-sg/%E5%8D%A4%E6%B1%81">卤汁</a>，边吃边说：“好得很，好得很，以后再也不用排队取厨刀了，就用这铁片片削吧。” 一传十，十传百，成了刀削面。</p>
<div id="attachment_26015" style="width: 310px" class="wp-caption alignnone"><a href=""><img loading="lazy" decoding="async" aria-describedby="caption-attachment-26015" class="size-medium wp-image-26015" title="房子" src="http://www.yankay.com/wp-content/uploads/2010/07/20100714002.jpg" alt="" width="300" height="225" /></a><p id="caption-attachment-26015" class="wp-caption-text">住的地方</p></div>
<div id="attachment_26014" style="width: 310px" class="wp-caption alignnone"><a href="http://www.yankay.com/wp-content/uploads/2010/07/20100714.jpg"><img loading="lazy" decoding="async" aria-describedby="caption-attachment-26014" class="size-medium wp-image-26014" title="床" src="http://www.yankay.com/wp-content/uploads/2010/07/20100714.jpg" alt="" width="300" height="225" /></a><p id="caption-attachment-26014" class="wp-caption-text">床铺</p></div>
<p>同居对象的博客：<a href="http://www.qqlemon.com/">http://www.qqlemon.com/</a></p>
<p>注：我们都是男性，性取向主流。</p>
<div id="attachment_26016" style="width: 310px" class="wp-caption alignnone"><a href="http://www.yankay.com/wp-content/uploads/2010/07/20100714001.jpg"><img loading="lazy" decoding="async" aria-describedby="caption-attachment-26016" class="size-medium wp-image-26016" title="电脑" src="http://www.yankay.com/wp-content/uploads/2010/07/20100714001.jpg" alt="" width="300" height="225" /></a><p id="caption-attachment-26016" class="wp-caption-text">工作兼游戏台</p></div>
<p><a rel="nofollow" href="./../../../%e6%9d%a5%e5%88%b0%e4%b8%8a%e6%b5%b7%e4%ba%86/index.html">来到上海了</a>最先出现在<a rel="nofollow" href="./../../../index.html">我自然</a>。</p>
]]></content:encoded>
					
					<wfw:commentRss>./../../../%e6%9d%a5%e5%88%b0%e4%b8%8a%e6%b5%b7%e4%ba%86/feed/index.html</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>又一个Grails BBS</title>
		<link>./../../../%e5%8f%88%e4%b8%80%e4%b8%aagrails-bbs/index.html</link>
					<comments>./../../../%e5%8f%88%e4%b8%80%e4%b8%aagrails-bbs/index.html#respond</comments>
		
		<dc:creator><![CDATA[yankay]]></dc:creator>
		<pubDate>Fri, 04 Jun 2010 13:12:58 +0000</pubDate>
				<category><![CDATA[未分类]]></category>
		<guid isPermaLink="false">http://www.yankay.com/?p=25997</guid>

					<description><![CDATA[<p>最近浩然姐姐要我们交JavaEE的大作业，于是我敏捷了一把，用一个晚上的时间生产了一个Grails BBS。  [&#8230;]</p>
<p><a rel="nofollow" href="./../../../%e5%8f%88%e4%b8%80%e4%b8%aagrails-bbs/index.html">又一个Grails BBS</a>最先出现在<a rel="nofollow" href="./../../../index.html">我自然</a>。</p>
]]></description>
										<content:encoded><![CDATA[<p>最近浩然姐姐要我们交JavaEE的大作业，于是我敏捷了一把，用一个晚上的时间生产了一个Grails BBS。</p>
<p>以前有ROR和Java的基础，Grails学的很快，一两个钟头就略通皮毛了。推荐一本读物，多亏他的帮助。</p>
<div><a href="http://www.infoq.com/cn/minibooks/grails"><img loading="lazy" decoding="async" class="alignnone" title="Grails入门指南" src="http://www.infoq.com/resource/minibooks/grails/zh/cover/Grails%20-%20Cover.jpg" alt="" width="256" height="360" /></a></div>
<p><a href="http://code.google.com/p/hnse/downloads/detail?name=gbbs.zip&amp;can=2&amp;q=#makechanges">BBS下载</a></p>
<p><a rel="nofollow" href="./../../../%e5%8f%88%e4%b8%80%e4%b8%aagrails-bbs/index.html">又一个Grails BBS</a>最先出现在<a rel="nofollow" href="./../../../index.html">我自然</a>。</p>
]]></content:encoded>
					
					<wfw:commentRss>./../../../%e5%8f%88%e4%b8%80%e4%b8%aagrails-bbs/feed/index.html</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>域名转出中，访问不到莫见怪</title>
		<link>./../../../%e5%9f%9f%e5%90%8d%e8%bd%ac%e5%87%ba%e4%b8%ad%ef%bc%8c%e8%ae%bf%e9%97%ae%e4%b8%8d%e5%88%b0%e8%8e%ab%e8%a7%81%e6%80%aa/index.html</link>
					<comments>./../../../%e5%9f%9f%e5%90%8d%e8%bd%ac%e5%87%ba%e4%b8%ad%ef%bc%8c%e8%ae%bf%e9%97%ae%e4%b8%8d%e5%88%b0%e8%8e%ab%e8%a7%81%e6%80%aa/index.html#respond</comments>
		
		<dc:creator><![CDATA[yankay]]></dc:creator>
		<pubDate>Sat, 29 May 2010 05:47:23 +0000</pubDate>
				<category><![CDATA[未分类]]></category>
		<guid isPermaLink="false">http://www.yankay.com/%e5%9f%9f%e5%90%8d%e8%bd%ac%e5%87%ba%e4%b8%ad%ef%bc%8c%e8%ae%bf%e9%97%ae%e4%b8%8d%e5%88%b0%e8%8e%ab%e8%a7%81%e6%80%aa/</guid>

					<description><![CDATA[<p><a rel="nofollow" href="./../../../%e5%9f%9f%e5%90%8d%e8%bd%ac%e5%87%ba%e4%b8%ad%ef%bc%8c%e8%ae%bf%e9%97%ae%e4%b8%8d%e5%88%b0%e8%8e%ab%e8%a7%81%e6%80%aa/index.html">域名转出中，访问不到莫见怪</a>最先出现在<a rel="nofollow" href="./../../../index.html">我自然</a>。</p>
]]></description>
										<content:encoded><![CDATA[<p><a rel="nofollow" href="./../../../%e5%9f%9f%e5%90%8d%e8%bd%ac%e5%87%ba%e4%b8%ad%ef%bc%8c%e8%ae%bf%e9%97%ae%e4%b8%8d%e5%88%b0%e8%8e%ab%e8%a7%81%e6%80%aa/index.html">域名转出中，访问不到莫见怪</a>最先出现在<a rel="nofollow" href="./../../../index.html">我自然</a>。</p>
]]></content:encoded>
					
					<wfw:commentRss>./../../../%e5%9f%9f%e5%90%8d%e8%bd%ac%e5%87%ba%e4%b8%ad%ef%bc%8c%e8%ae%bf%e9%97%ae%e4%b8%8d%e5%88%b0%e8%8e%ab%e8%a7%81%e6%80%aa/feed/index.html</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Jsa4j快速入门</title>
		<link>./../../../jsa4j%e5%bf%ab%e9%80%9f%e5%85%a5%e9%97%a8/index.html</link>
					<comments>./../../../jsa4j%e5%bf%ab%e9%80%9f%e5%85%a5%e9%97%a8/index.html#comments</comments>
		
		<dc:creator><![CDATA[yankay]]></dc:creator>
		<pubDate>Sun, 09 May 2010 04:39:52 +0000</pubDate>
				<category><![CDATA[未分类]]></category>
		<guid isPermaLink="false">http://www.yankay.com/?p=25975</guid>

					<description><![CDATA[<p>安装开发环境 安装Java JDK 安装Eclipse 下载jsa4j-derby 使用 Jsa4j开发 新建 [&#8230;]</p>
<p><a rel="nofollow" href="./../../../jsa4j%e5%bf%ab%e9%80%9f%e5%85%a5%e9%97%a8/index.html">Jsa4j快速入门</a>最先出现在<a rel="nofollow" href="./../../../index.html">我自然</a>。</p>
]]></description>
										<content:encoded><![CDATA[<h4><a name="安装开发环境">安装开发环境</a></h4>
<p><strong>安装<a rel="nofollow" href="http://java.sun.com/javase/downloads/index.jsp">Java  JDK</a> </strong></p>
<p><strong>安装<a rel="nofollow" href="http://www.eclipse.org/">Eclipse</a> </strong></p>
<p><strong>下载<a rel="nofollow" href="http://code.google.com/p/jsa4j/downloads/detail?name=jsa4j-db-kv-derby-1.0-alpha-1-full.zip&amp;can=2&amp;q=#makechanges">jsa4j-derby</a> </strong></p>
<h3><a name="使用Jsa4j开发">使用 Jsa4j开发</a></h3>
<ul>
<li>新建一个Java工程，</li>
<li>在classpath中导入dependence文件夹中的Jar包，还要有jsa4j-db-kv-derby- 1.0-alpha-1.jar.依赖情况详见：<a rel="nofollow" href="http://jsa4j.sourceforge.net/jsa4j-db-kv-derby/dependencies.html">http://jsa4j.sourceforge.net/jsa4j-db-kv-derby/dependencies.html</a></li>
<li>新建一个Xml文件,文件路径为 <strong>META-INF/jsa4j-db-kv.xml</strong> ：</li>
<pre lang="xml">
<jsa4j-db-kv xmlns="http://jerrymouse.org/ns/jsa4j-db-kv"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://jerrymouse.org/ns/jsa4j_db_kv_1_0.xsd"
        version="1.0"> 
        <jsa4j-db-kv-unit name="derby-db"> 
                <provider>org.jerrymouse.jsa4j.db.kv.local.derby.DerbyDBManager
                </provider> 
        </jsa4j-db-kv-unit> 
</jsa4j-db-kv> 
</pre>
<li>新 建一个Java类：</li>
<pre lang="java">
      package org.jerrymouse.jsa4j.db.kv.example;

      import org.jerrymouse.jsa4j.db.kv.DB;
      import org.jerrymouse.jsa4j.db.kv.DBManagerFactory;
      import org.jerrymouse.jsa4j.db.kv.Repository;

      public class Tutorial {

              private static DB db;

              private static String EXAMPLE = "example";

              private static DB getDB() {
                      if (db == null)
                              db = new DBManagerFactory().getDBManager("derby-db").getDB();
                      return db;
              }

              public static Repository getRepository(String prefix) {
                      Repository repository = new Repository(prefix, getDB());
                      return repository;
              }

              public static void main(String[] args) {
                      //存放一个字符串"hello jsa4j"
                      getRepository(EXAMPLE).put("1", "hello jsa4j");
                      //取出这个字符串
                      String message = getRepository(EXAMPLE).get("1");
                      System.out.println(message);
              }
      }


</pre>
</ul>
<ul>
<li>如 是运行即可</li>
</ul>
<p><strong>详细参考<a rel="nofollow" href="http://jsa4j.sourceforge.net/jsa4j-db-kv/apidocs/index.html">API文档</a> </strong></p>
<p><strong>示例代码下载<a rel="nofollow" href="http://code.google.com/p/jsa4j/downloads/detail?name=jsa4j-db-kv-tutorial.zip&amp;can=2&amp;q=#makechanges">示例代码</a> </strong></p>
<p><a rel="nofollow" href="./../../../jsa4j%e5%bf%ab%e9%80%9f%e5%85%a5%e9%97%a8/index.html">Jsa4j快速入门</a>最先出现在<a rel="nofollow" href="./../../../index.html">我自然</a>。</p>
]]></content:encoded>
					
					<wfw:commentRss>./../../../jsa4j%e5%bf%ab%e9%80%9f%e5%85%a5%e9%97%a8/feed/index.html</wfw:commentRss>
			<slash:comments>1</slash:comments>
		
		
			</item>
		<item>
		<title>Jsa4j通用数据底层</title>
		<link>./../../../jsa4j%e9%80%9a%e7%94%a8%e6%95%b0%e6%8d%ae%e5%ba%95%e5%b1%82/index.html</link>
					<comments>./../../../jsa4j%e9%80%9a%e7%94%a8%e6%95%b0%e6%8d%ae%e5%ba%95%e5%b1%82/index.html#respond</comments>
		
		<dc:creator><![CDATA[yankay]]></dc:creator>
		<pubDate>Sun, 09 May 2010 04:32:32 +0000</pubDate>
				<category><![CDATA[未分类]]></category>
		<guid isPermaLink="false">http://www.yankay.com/?p=25968</guid>

					<description><![CDATA[<p>jsa4j是Jerrymouse Storage API for Java的简称。是JerryMouse小组开 [&#8230;]</p>
<p><a rel="nofollow" href="./../../../jsa4j%e9%80%9a%e7%94%a8%e6%95%b0%e6%8d%ae%e5%ba%95%e5%b1%82/index.html">Jsa4j通用数据底层</a>最先出现在<a rel="nofollow" href="./../../../index.html">我自然</a>。</p>
]]></description>
										<content:encoded><![CDATA[<div>
<p><a href="http://code.google.com/p/jsa4j/">jsa4j</a>是Jerrymouse Storage API for Java的简称。是<a rel="nofollow" href="http://www.jerrymouse.org/">JerryMouse</a>小组开发的通用数据 底层，可以架设在单机或者Gae环境之下。脱胎于<a rel="nofollow" href="http://commoncloud.sourceforge.net/">CommonCloud</a>项目，由于<a rel="nofollow" href="http://commoncloud.sourceforge.net/">CommonCloud</a>过 于复杂，缺乏可用性。所以开发了他的简化版Jsa4J。Jsa4J的目标是可用和简洁。<a href="http://code.google.com/p/jsa4j/">项目地址</a></p>
<hr />
<p><img decoding="async" src="http://docs.google.com/drawings/pub?id=1CiY7kJASlDOC-By9ZNd6-Z9RX-ANzviOsrGk7TLmDDo&amp;w=570&amp;nonsense=something_that_ends_with.png" alt="" /></p>
<hr />
<p>Jsa4j子项目列表</p>
<p><strong> Jsa4j-db-kv 提供 KeyValue 数据库接口。有一个Derby和一个Gae实现。还有用于缓存的支持 </strong></p>
<p>接口本身非常简洁：只有两个方法：</p>
<pre> String get(String key)
 String put(String key, String value)</pre>
<p>详 见<a rel="nofollow" href="http://jsa4j.sourceforge.net/jsa4j-db-kv/apidocs/index.html">API文档</a></p>
<p><strong> Jsa4j-db-table 表结构的数据库支持 </strong></p>
<p><strong> Jsa4j-search  提供全文搜索支持。 </strong></p>
<p><strong> Jsa4j-bus 建立在分布式缓存上的通讯总线 </strong></p>
</div>
<hr />
<p><a name="简介"><strong>Jsa4j- db-kv</strong>。随着NoSql</a><a href="http://code.google.com/p/jsa4j/w/edit/NoSql">?</a>运动，新奇的数据库层出不穷，提供 了各种丰富的接口。这些接口丰富在两个方面：</p>
<ul>
<li>事务处理</li>
<li>数据结构</li>
</ul>
<p>Jsa4j- db-kv没有“事务处理”和“数据结构”的概念，极大的方便了数据库开发。</p>
<p><strong>关于事务。</strong>不管是ACID还是 BASE，都是事务处理方式。Jsa4j-db-kv没有事务的概念，默认大于配置，  认为存操作需要事务，取操作不需要。认为数据库写入永远是成功的。具体是不是真的能成功，应该由另一套系统来管理。</p>
<p>对于比较可靠的列存数据库，和不怎么可靠的类似Cache的数据库都有支持。</p>
<p><strong>关于数据结构</strong>。数据结构方面有关系性 数据库，列存(BigTable<a href="http://code.google.com/p/jsa4j/w/edit/BigTable">?</a> like),文档数据库，图数据库和Key Value之分。其中Key  Value是最简单的，可以由其他类型的数据库实现。同时提供一个索引工具和搜索工具，满足在数据索引上的需要。</p>
<hr />
<p><a href="http://code.google.com/p/jsa4j/">项目地址</a></p>
<p><a href="http://code.google.com/p/jsa4j/wiki/tutorial">快速入门</a></p>
<p><a rel="nofollow" href="./../../../jsa4j%e9%80%9a%e7%94%a8%e6%95%b0%e6%8d%ae%e5%ba%95%e5%b1%82/index.html">Jsa4j通用数据底层</a>最先出现在<a rel="nofollow" href="./../../../index.html">我自然</a>。</p>
]]></content:encoded>
					
					<wfw:commentRss>./../../../jsa4j%e9%80%9a%e7%94%a8%e6%95%b0%e6%8d%ae%e5%ba%95%e5%b1%82/feed/index.html</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Facebook Graph API使用介绍</title>
		<link>./../../../facebook-graph-api%e4%bd%bf%e7%94%a8%e4%bb%8b%e7%bb%8d/index.html</link>
					<comments>./../../../facebook-graph-api%e4%bd%bf%e7%94%a8%e4%bb%8b%e7%bb%8d/index.html#respond</comments>
		
		<dc:creator><![CDATA[yankay]]></dc:creator>
		<pubDate>Wed, 05 May 2010 02:50:43 +0000</pubDate>
				<category><![CDATA[未分类]]></category>
		<guid isPermaLink="false">http://www.yankay.com/?p=25966</guid>

					<description><![CDATA[<p>Facebook Graph API可以理解为一个可以访问Facebook数据的Web服务。该API提供了对人 [&#8230;]</p>
<p><a rel="nofollow" href="./../../../facebook-graph-api%e4%bd%bf%e7%94%a8%e4%bb%8b%e7%bb%8d/index.html">Facebook Graph API使用介绍</a>最先出现在<a rel="nofollow" href="./../../../index.html">我自然</a>。</p>
]]></description>
										<content:encoded><![CDATA[<p>Facebook Graph API可以理解为一个可以访问Facebook数据的Web服务。该API提供了对人员，相册，事件等等Facebook对象以及这些对象之间诸如朋友，标签，分享内容等等连接之间的访问。</p>
<p>当您输入一个URL后，会返回一个Json对象</p>
<p>对象的格式参考<a href="http://developers.facebook.com/docs/reference/api/">http://developers.facebook.com/docs/reference/api/</a>。</p>
<p>你可以用同样的方式访问Facebook对象</p>
<ul>
<li>Users: <a href="http://graph.facebook.com/btaylor">https://graph.facebook.com/btaylor</a> (Bret Taylor)</li>
<li>Pages: <a href="http://graph.facebook.com/cocacola">https://graph.facebook.com/cocacola</a> (Coca-Cola page)</li>
<li>Events: <a href="http://graph.facebook.com/331218348435">https://graph.facebook.com/251906384206</a> (Facebook Developer Garage Austin)</li>
<li>Groups: <a href="http://graph.facebook.com/2204501798">https://graph.facebook.com/2204501798</a> (Emacs users group)</li>
<li>Applications: <a href="http://graph.facebook.com/2439131959">https://graph.facebook.com/2439131959</a> (the Graffiti app)</li>
<li>Status messages: <a href="http://graph.facebook.com/367501354973">https://graph.facebook.com/367501354973</a> (A status message from Bret)</li>
<li>Photos: <a href="http://graph.facebook.com/98423808305">https://graph.facebook.com/98423808305</a> (A photo from the Coca-Cola page)</li>
<li>Photo albums: <a href="http://graph.facebook.com/99394368305">https://graph.facebook.com/99394368305</a> (Coca-Cola&#8217;s wall photos)</li>
<li>Videos: <a href="http://graph.facebook.com/614004947048">https://graph.facebook.com/614004947048</a> (A Facebook tech talk on <a href="http://www.tornadoweb.org/">Tornado</a>)</li>
<li>Notes: <a href="http://graph.facebook.com/122788341354">https://graph.facebook.com/122788341354</a> (Note announcing Facebook for iPhone 3.0)</li>
</ul>
<p>你也可以用<code>https://graph.facebook.com/ID/CONNECTION_TYPE</code>访问这些对象的其他信息</p>
<ul>
<li>Friends: <a href="http://graph.facebook.com/me/friends">https://graph.facebook.com/me/<strong>friends</strong></a></li>
<li>News feed: <a href="http://graph.facebook.com/me/home">https://graph.facebook.com/me/<strong>home</strong></a></li>
<li>Profile feed (Wall): <a href="http://graph.facebook.com/me/feed">https://graph.facebook.com/me/<strong>feed</strong></a></li>
<li>Likes: <a href="http://graph.facebook.com/me/likes">https://graph.facebook.com/me/<strong>likes</strong></a></li>
<li>Movies: <a href="http://graph.facebook.com/me/movies">https://graph.facebook.com/me/<strong>movies</strong></a></li>
<li>Books: <a href="http://graph.facebook.com/me/books">https://graph.facebook.com/me/<strong>books</strong></a></li>
<li>Notes: <a href="http://graph.facebook.com/me/notes">https://graph.facebook.com/me/<strong>notes</strong></a></li>
<li>Photos: <a href="http://graph.facebook.com/me/photos">https://graph.facebook.com/me/<strong>photos</strong></a></li>
<li>Videos: <a href="http://graph.facebook.com/me/videos">https://graph.facebook.com/me/<strong>videos</strong></a></li>
<li>Events: <a href="http://graph.facebook.com/me/events">https://graph.facebook.com/me/<strong>events</strong></a></li>
<li>Groups: <a href="http://graph.facebook.com/me/groups">https://graph.facebook.com/me/<strong>groups</strong></a></li>
</ul>
<p>参考：<a href="http://developers.facebook.com/docs/api">http://developers.facebook.com/docs/api</a></p>
<p><a rel="nofollow" href="./../../../facebook-graph-api%e4%bd%bf%e7%94%a8%e4%bb%8b%e7%bb%8d/index.html">Facebook Graph API使用介绍</a>最先出现在<a rel="nofollow" href="./../../../index.html">我自然</a>。</p>
]]></content:encoded>
					
					<wfw:commentRss>./../../../facebook-graph-api%e4%bd%bf%e7%94%a8%e4%bb%8b%e7%bb%8d/feed/index.html</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
	</channel>
</rss>
